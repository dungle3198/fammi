{"ast":null,"code":"var _jsxFileName = \"/Users/dungle/Desktop/fammi/src/components/Post.jsx\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport { updatePost_Content, updatePost_Img, updatePost_Time, deletePost, docClient } from \"./Data/post\";\nimport { create_post_family } from './Data/family'; // import { user_list } from './Data/user';\n\nimport { ReactS3Client } from \"./Data/s3\";\nimport Comment from \"./Comment.jsx\"; // import ChatBox from \"./ChatBox\";\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post_list: [],\n      content: \"\",\n      selected_post: {},\n      selected_content: \"\",\n      id: \"\",\n      img: \"\",\n      selected_img: \"no-img\",\n      click: 0,\n      comment_list: [],\n      uploaded_img: \"no-img\"\n    };\n  }\n\n  clearForm() {\n    this.setState({\n      content: \"\",\n      uploaded_img: \"no-img\",\n      selected_img: \"\"\n    });\n  }\n\n  checkForm() {\n    if (this.state.selected_content === \"\") {\n      alert(\"Content to be filled\");\n      return false;\n    }\n\n    return true;\n  }\n\n  handleChange(e) {\n    //console.log(e.target.value)\n    let obj = {};\n    obj[e.target.name] = e.target.value;\n    this.setState(obj);\n  }\n\n  handleUploadImg() {\n    var path = document.getElementById(\"img\").files[0].name; // get the image file name\n\n    var filename = path.split('.')[0]; // get the name without the type\n\n    ReactS3Client.uploadFile(document.getElementById(\"img\").files[0], filename) // pload the image up to s3 first\n    .then(data => {\n      this.setState({\n        uploaded_img: data.location\n      });\n    }) //create cometchat user\n    .catch(err => console.error(err));\n  }\n\n  handleUploadImgEdit() {\n    var path = document.getElementById(\"imgedit\").files[0].name; // get the image file name\n\n    var filename = path.split('.')[0]; // get the name without the type\n\n    ReactS3Client.uploadFile(document.getElementById(\"imgedit\").files[0], filename) // pload the image up to s3 first\n    .then(data => {\n      this.setState({\n        selected_img: data.location\n      });\n    }) //create cometchat user\n    .catch(err => console.error(err));\n  }\n\n  getAllPosts() {\n    var params = {\n      TableName: \"posts\"\n    };\n    docClient.scan(params, function onScan(err, data) {\n      if (err) {// console.error(\"Unable to scan the table. Error JSON:\", JSON.stringify(err, null, 2));\n      } else {\n        //console.log(\"Scan succeeded.\");\n        var post_list = JSON.parse(JSON.stringify(data.Items));\n        post_list.sort((a, b) => b.time - a.time);\n        this.setState({\n          post_list: post_list\n        }); //console.log(post_list)\n      }\n    }.bind(this));\n  }\n\n  handleCreate() {\n    this.createPost(this.state.content, this.props.user.key, this.props.user, this.state.uploaded_img);\n    var list = this.props.family.posts;\n    var post_input = {\n      user: this.props.user.username,\n      content: this.state.content,\n      img: this.state.uploaded_img,\n      time: Date.now()\n    };\n    list.push(post_input);\n    create_post_family(this.props.family.family_key, list);\n    this.clearForm();\n    this.updatePostMul();\n  }\n\n  createPost(content, family_key, user, img) {\n    var input = {\n      \"post_id\": uuidv4(),\n      \"content\": content,\n      \"img\": img,\n      \"family_key\": family_key,\n      \"user\": user,\n      \"time\": Date.now(),\n      \"edit_time\": \"\"\n    };\n    var params = {\n      TableName: \"posts\",\n      Item: input\n    };\n    docClient.put(params, function (err, data) {\n      if (err) {\n        console.log(\"users::save::error - \" + JSON.stringify(err, null, 2));\n      } else {\n        getAllPosts();\n        console.log(\"users::save::success\");\n      }\n    });\n  }\n\n  handleClick(e) {\n    this.setState({\n      id: e.target.id\n    });\n    this.getPostbyidMul(e.target.id);\n  }\n\n  handleEdit() {\n    if (this.checkForm() === true) {\n      updatePost_Content(this.state.id, this.state.selected_content);\n      updatePost_Time(this.state.id, Date.now());\n      updatePost_Img(this.state.id, this.state.selected_img);\n      $('#editPost').modal('hide');\n      this.updatePostMul();\n    }\n  }\n\n  handleDelete(e) {\n    var confirm_box = window.confirm(\"Do you want to delete the post.\");\n\n    if (confirm_box === true) {\n      deletePost(e.target.id);\n      $('#editPost').modal('hide');\n      this.updatePostMul();\n    }\n  }\n\n  handleRemove() {\n    var confirm_box = window.confirm(\"Do you want to remove the image.\");\n\n    if (confirm_box === true) {\n      updatePost_Img(this.state.id, \"no-img\");\n      this.updatePostMul();\n    }\n  }\n\n  getPostbyid(id) {\n    var params = {\n      TableName: \"posts\",\n      Key: {\n        \"post_id\": id\n      }\n    };\n    docClient.get(params, function (err, data) {\n      // Đây là khúc nó bắt đầu fetch data \n      if (err) {\n        console.log(\"users::fetchOneByKey::error - \" + JSON.stringify(err, null, 2)); // => This is when the fetching failed\n      } else {\n        // Nếu data lấy về thành công thì nó sẽ trở thành cái object mà e muốn\n        var post = data.Item; // console.log(post)\n\n        this.setState({\n          selected_post: post,\n          selected_content: this.state.selected_post.content,\n          selected_img: this.state.selected_post.img\n        }); // console.log(\"users::fetchOneByKey::success - \" + JSON.stringify(data, null, 2)); ==> This is when the fetching success\n      }\n    }.bind(this));\n  }\n\n  getPostbyidMul(id) {\n    this.getPostbyid(id);\n    setTimeout(function () {\n      this.getPostbyid(id);\n      $('#editPost').modal('show');\n    }.bind(this), 500);\n    setTimeout(function () {\n      this.getPostbyid(id);\n      $('#editPost').modal('show');\n    }.bind(this), 1000);\n    setTimeout(function () {\n      this.getPostbyid(id);\n      $('#editPost').modal('show');\n    }.bind(this), 1500);\n  }\n\n  componentDidMount() {\n    this.getAllPosts();\n  }\n\n  getAvatar(user_email) {\n    var _u = this.props.users.find(e => {\n      return e.email === user_email;\n    });\n\n    if (_u !== undefined) {\n      if (_u.avatar !== \"\") {\n        return _u.avatar;\n      }\n    }\n\n    return require('./imgs/ava.jpg');\n  }\n\n  getName(user_email) {\n    var _u = this.props.users.find(e => {\n      return e.email === user_email;\n    });\n\n    if (_u !== undefined) {\n      return _u.username;\n    }\n\n    return \"Username\";\n  }\n\n  handleEdit_Time(post) {\n    if (post.edit_time !== \"\") {\n      //(\"edited is real\")\n      return \" Edited on \" + new Date(post.edit_time).toString().substr(16, 5) + \" \" + new Date(post.edit_time).toString().substr(4, 11);\n    } else {\n      return \" Created on \" + new Date(post.time).toString().substr(16, 5) + \" \" + new Date(post.time).toString().substr(4, 11);\n    }\n  }\n\n  handlestring_length(post, type) {\n    var length_per_row = Math.floor(($(\"#createPost\").width() - 6) / 8.4); // console.log(length_per_row)\n\n    var length = post.content.length; //console.log(\"There are\" + length + \" chars in this line\");\n\n    if (post.content === \"\") {\n      return 0;\n    }\n\n    if (type === \"row\") {\n      var rows = Math.ceil(length / length_per_row); //console.log(\"there are \" + rows + \" rows\")\n\n      return rows;\n    }\n\n    if (type === \"col\") {\n      if (length < length_per_row) {\n        //console.log(\"low amount\")\n        return length;\n      }\n\n      return length_per_row;\n    }\n  }\n\n  render_img_video(url) {\n    if (url !== undefined) {\n      if (url === \"no-img\") {} else if (url.slice(-3) === \"mp4\") {\n        return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n          className: \"text-center pr-3 pl-3 pb-3 pt-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(\"video\", {\n          className: \"Video\",\n          controls: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(\"source\", {\n          src: url,\n          type: \"video/mp4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }), \"Your browser does not support HTML video.\")));\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n          className: \"text-center pr-3 pl-3 pb-3 pt-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"Image\",\n          src: url,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        })));\n      }\n    }\n  }\n\n  handleX() {\n    this.setState({\n      uploaded_img: \"no-img\"\n    });\n  }\n\n  render_img_video_create(url) {\n    if (url !== undefined) {\n      if (url === \"no-img\") {} else if (url.slice(-3) === \"mp4\") {\n        return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n          className: \"text-center pr-3 pl-3 pb-11 pt-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"CloseBtn close closeImg\",\n          onClick: this.handleX.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"video\", {\n          className: \"Video\",\n          controls: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(\"source\", {\n          src: url,\n          type: \"video/mp4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }), \"Your browser does not support HTML video.\")));\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n          className: \"text-center pr-3 pl-3 pb-1 pt-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"CloseBtn close closeImg\",\n          onClick: this.handleX.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"img\", {\n          className: \"Image HoverShadow\",\n          src: url,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        })));\n      }\n    }\n  }\n\n  handleXedit() {\n    this.setState({\n      selected_img: \"no-img\"\n    });\n  }\n\n  render_img_video_edit(url) {\n    if (url !== undefined) {\n      if (url === \"no-img\") {} else if (url.slice(-3) === \"mp4\") {\n        return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n          className: \"text-center pr-3 pl-3 pb-11 pt-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"CloseBtn close closeImg\",\n          onClick: this.handleXedit.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"video\", {\n          className: \"Video\",\n          controls: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, React.createElement(\"source\", {\n          src: url,\n          type: \"video/mp4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }), \"Your browser does not support HTML video.\")));\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n          className: \"text-center pr-3 pl-3 pb-1 pt-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"CloseBtn close closeImg\",\n          onClick: this.handleXedit.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"img\", {\n          className: \"Image HoverShadow\",\n          src: url,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        })));\n      }\n    }\n  }\n\n  editable(post) {\n    if (this.props.user.email === post.user.email) {\n      return React.createElement(\"div\", {\n        className: \"ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        id: post.post_id,\n        onClick: this.handleClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \" \", React.createElement(\"small\", {\n        className: \"hover\",\n        id: post.post_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"Edit\")), \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"|\")), \" \", React.createElement(\"span\", {\n        id: post.post_id,\n        onClick: this.handleDelete.bind(this).bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \" \", React.createElement(\"small\", {\n        className: \"hover\",\n        id: post.post_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"Delete\")), \" \");\n    }\n  }\n\n  showPost() {\n    return React.createElement(React.Fragment, null, this.state.post_list.map((post, index) => {\n      if (post.family_key === this.props.user.key) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"mb-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"post w-100 m-0 p-4 border rounded bg-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"title pt-2 pb-2 border-bottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row w-100 ml-2 mr-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"Avatar col-auto p-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"rounded-circle border\",\n          src: this.getAvatar(post.user.email),\n          alt: \"Generic placeholder\",\n          width: \"50px\",\n          height: \"50px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col pr-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"d-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"m-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, this.getName(post.user.email)), \" \", this.editable(post)), React.createElement(\"p\", {\n          className: \"m-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, this.handleEdit_Time(post)))))), React.createElement(\"textarea\", {\n          className: \"PostContent noInput pl-3 pr-3\",\n          readOnly: true,\n          rows: this.handlestring_length(post, \"row\"),\n          cols: this.handlestring_length(post, \"col\"),\n          value: post.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }), this.render_img_video(post.img), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }), React.createElement(Comment, {\n          getpost: this.getPostbyid.bind(this),\n          post_id: post.post_id,\n          poster: this.props.user,\n          users: this.props.users,\n          length_per_row: Math.floor(($(\"#createPost\").width() - 96) / 8.4),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        })));\n      }\n\n      return null;\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Post mt-4 mr-2 mb-2 ml-2 border rounded bg-white p-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"createPost\",\n      type: \"text\",\n      className: \"form-control mb-2\",\n      placeholder: \"Share your story.\",\n      name: \"content\",\n      value: this.state.content,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), this.render_img_video_create(this.state.uploaded_img), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"upload-btn-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"Upload Image/Video\"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"file\",\n      id: \"img\",\n      name: \"img\",\n      value: this.state.img,\n      onChange: this.handleUploadImg.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.handleCreate.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"Post\")))), React.createElement(\"div\", {\n      className: \"Post m-2 m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, this.showPost()), React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"editPost\",\n      tabIndex: -1,\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Modal modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-2\",\n      name: \"selected_content\",\n      value: this.state.selected_content || \"\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }), this.render_img_video_edit(this.state.selected_img), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"upload-btn-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, \"Upload Image/Video\"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"file\",\n      id: \"imgedit\" // name=\"img\"\n      // value={this.state.selected_img}\n      ,\n      onChange: this.handleUploadImgEdit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.handleEdit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, \"Submit\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dungle/Desktop/fammi/src/components/Post.jsx"],"names":["React","Component","$","updatePost_Content","updatePost_Img","updatePost_Time","deletePost","docClient","create_post_family","ReactS3Client","Comment","Post","constructor","props","state","post_list","content","selected_post","selected_content","id","img","selected_img","click","comment_list","uploaded_img","clearForm","setState","checkForm","alert","handleChange","e","obj","target","name","value","handleUploadImg","path","document","getElementById","files","filename","split","uploadFile","then","data","location","catch","err","console","error","handleUploadImgEdit","getAllPosts","params","TableName","scan","onScan","JSON","parse","stringify","Items","sort","a","b","time","bind","handleCreate","createPost","user","key","list","family","posts","post_input","username","Date","now","push","family_key","updatePostMul","input","uuidv4","Item","put","log","handleClick","getPostbyidMul","handleEdit","modal","handleDelete","confirm_box","window","confirm","handleRemove","getPostbyid","Key","get","post","setTimeout","componentDidMount","getAvatar","user_email","_u","users","find","email","undefined","avatar","require","getName","handleEdit_Time","edit_time","toString","substr","handlestring_length","type","length_per_row","Math","floor","width","length","rows","ceil","render_img_video","url","slice","handleX","render_img_video_create","handleXedit","render_img_video_edit","editable","post_id","showPost","map","index","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport $ from 'jquery';\nimport { updatePost_Content, updatePost_Img, updatePost_Time, deletePost, docClient } from \"./Data/post\";\nimport { create_post_family } from './Data/family';\n// import { user_list } from './Data/user';\nimport { ReactS3Client } from \"./Data/s3\";\nimport Comment from \"./Comment.jsx\";\n// import ChatBox from \"./ChatBox\";\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            post_list: [],\n            content: \"\",\n            selected_post: {},\n            selected_content: \"\",\n            id: \"\",\n            img: \"\",\n            selected_img: \"no-img\",\n            click: 0,\n            comment_list: [],\n            uploaded_img: \"no-img\"\n        }\n    }\n    clearForm() {\n        this.setState({\n            content: \"\",\n            uploaded_img: \"no-img\",\n            selected_img: \"\"\n        })\n    }\n    checkForm() {\n        if (this.state.selected_content === \"\") {\n            alert(\"Content to be filled\")\n            return false\n        }\n        return true\n    }\n    handleChange(e) {\n        //console.log(e.target.value)\n        let obj = {};\n        obj[e.target.name] = e.target.value;\n        this.setState(obj);\n    }\n    handleUploadImg() {\n        var path = document.getElementById(\"img\").files[0].name; // get the image file name\n        var filename = path.split('.')[0]; // get the name without the type\n        ReactS3Client\n            .uploadFile(document.getElementById(\"img\").files[0], filename) // pload the image up to s3 first\n            .then(data => {\n                this.setState({\n                    uploaded_img: data.location\n                })\n            })//create cometchat user\n            .catch(err => console.error(err))\n    }\n    handleUploadImgEdit() {\n        var path = document.getElementById(\"imgedit\").files[0].name; // get the image file name\n        var filename = path.split('.')[0]; // get the name without the type\n        ReactS3Client\n            .uploadFile(document.getElementById(\"imgedit\").files[0], filename) // pload the image up to s3 first\n            .then(data => {\n                this.setState({\n                    selected_img: data.location\n                })\n            })//create cometchat user\n            .catch(err => console.error(err))\n    }\n    getAllPosts() \n    {\n        var params = {\n            TableName: \"posts\"\n        };\n        \n        docClient.scan(params, function onScan(err, data) {\n    \n            if (err) {\n               // console.error(\"Unable to scan the table. Error JSON:\", JSON.stringify(err, null, 2));\n            } else {\n                //console.log(\"Scan succeeded.\");\n                var post_list = JSON.parse(JSON.stringify(data.Items))\n                post_list.sort((a, b) => b.time - a.time)\n                this.setState({\n                    post_list: post_list\n                })\n                //console.log(post_list)\n            }\n        }.bind(this));\n    };\n    handleCreate() {\n        this.createPost(this.state.content, this.props.user.key, this.props.user, this.state.uploaded_img)\n        var list = this.props.family.posts;\n        var post_input = {\n            user: this.props.user.username,\n            content: this.state.content,\n            img: this.state.uploaded_img,\n            time: Date.now()\n        }\n        list.push(post_input);\n        create_post_family(this.props.family.family_key, list);\n        this.clearForm()\n        this.updatePostMul()\n    }\n    createPost(content,family_key,user,img) {\n        var input = {\n            \"post_id\":uuidv4(),\n            \"content\": content,\n            \"img\": img,\n            \"family_key\" : family_key,\n            \"user\":user,\n            \"time\":Date.now(),\n            \"edit_time\":\"\"\n        };\n        var params = {\n            TableName: \"posts\",\n            Item: input\n        };\n        docClient.put(params, function (err, data) {\n    \n            if (err) {\n                console.log(\"users::save::error - \" + JSON.stringify(err, null, 2));\n            } else {\n                getAllPosts();\n                console.log(\"users::save::success\");\n            }\n        })\n    }\n    handleClick(e) {\n        this.setState({\n            id: e.target.id\n        })\n        this.getPostbyidMul(e.target.id)\n    }\n    handleEdit() {\n        if (this.checkForm() === true) {\n            updatePost_Content(this.state.id, this.state.selected_content)\n            updatePost_Time(this.state.id, Date.now())\n            updatePost_Img(this.state.id, this.state.selected_img)\n            $('#editPost').modal('hide')\n            this.updatePostMul()\n        }\n    }\n    handleDelete(e) {\n        var confirm_box = window.confirm(\"Do you want to delete the post.\");\n        if (confirm_box === true) {\n            deletePost(e.target.id)\n            $('#editPost').modal('hide')\n            this.updatePostMul()\n        }\n\n    }\n    handleRemove() {\n        var confirm_box = window.confirm(\"Do you want to remove the image.\");\n        if (confirm_box === true) {\n            updatePost_Img(this.state.id, \"no-img\")\n            this.updatePostMul()\n        }\n    }\n   \n    getPostbyid(id) {\n        var params = {\n            TableName: \"posts\",\n            Key: {\n                \"post_id\": id\n            }\n        };\n        docClient.get(params, function (err, data) { // Đây là khúc nó bắt đầu fetch data \n            if (err) {\n                console.log(\"users::fetchOneByKey::error - \" + JSON.stringify(err, null, 2)); // => This is when the fetching failed\n            }\n            else { // Nếu data lấy về thành công thì nó sẽ trở thành cái object mà e muốn\n                var post = data.Item;\n                // console.log(post)\n                this.setState({\n                    selected_post: post,\n                    selected_content: this.state.selected_post.content,\n                    selected_img: this.state.selected_post.img\n                });\n                // console.log(\"users::fetchOneByKey::success - \" + JSON.stringify(data, null, 2)); ==> This is when the fetching success\n            }\n        }.bind(this))\n    }\n\n\n    getPostbyidMul(id) {\n        this.getPostbyid(id)\n        setTimeout(\n            function () {\n                this.getPostbyid(id)\n                $('#editPost').modal('show')\n            }\n                .bind(this),\n            500\n        );\n        setTimeout(\n            function () {\n                this.getPostbyid(id)\n                $('#editPost').modal('show')\n            }\n                .bind(this),\n            1000\n        );\n        setTimeout(\n            function () {\n                this.getPostbyid(id)\n                $('#editPost').modal('show')\n            }\n                .bind(this),\n            1500\n        );\n    }\n    componentDidMount() {\n        this.getAllPosts();\n    }\n    getAvatar(user_email) {\n        var _u = this.props.users.find((e) => { return e.email === user_email });\n        if (_u !== undefined) {\n            if (_u.avatar !== \"\") {\n                return _u.avatar;\n            }\n        }\n        return require('./imgs/ava.jpg')\n    }\n    getName(user_email) {\n        var _u = this.props.users.find((e) => { return e.email === user_email });\n        if (_u !== undefined) {\n            return _u.username\n        }\n        return \"Username\"\n\n    }\n    handleEdit_Time(post) {\n        if (post.edit_time !== \"\") {\n            //(\"edited is real\")\n            return \" Edited on \" + new Date(post.edit_time).toString().substr(16, 5) + \" \" + new Date(post.edit_time).toString().substr(4, 11)\n        }\n        else {\n            return \" Created on \" + new Date(post.time).toString().substr(16, 5) + \" \" + new Date(post.time).toString().substr(4, 11)\n        }\n    }\n    handlestring_length(post, type) {\n        var length_per_row = Math.floor(($(\"#createPost\").width()-6)/8.4) ;\n        // console.log(length_per_row)\n        var length = post.content.length;\n\n        //console.log(\"There are\" + length + \" chars in this line\");\n        if (post.content === \"\") {\n            return 0\n        }\n        if (type === \"row\") {\n\n            var rows = Math.ceil(length / length_per_row)\n            //console.log(\"there are \" + rows + \" rows\")\n            return rows\n        }\n        if (type === \"col\") {\n            if (length < length_per_row) {\n                //console.log(\"low amount\")\n                return length;\n            }\n            return length_per_row;\n        }\n\n    }\n    render_img_video(url) {\n        if (url !== undefined) {\n            if (url === \"no-img\") {\n\n            }\n            else if (url.slice(-3) === \"mp4\") {\n                return (<>\n                    <p className=\"text-center pr-3 pl-3 pb-3 pt-1\">\n                        <video className=\"Video\" controls>\n                            <source src={url} type=\"video/mp4\" />\n                    Your browser does not support HTML video.\n                </video>\n                    </p>\n                </>)\n            }\n            else {\n                return (<>\n                    <p className=\"text-center pr-3 pl-3 pb-3 pt-1\">\n                        < img className=\"Image\" src={url} alt=\"\" />\n                    </p>\n                </>)\n            }\n        }\n    }\n    handleX() {\n        this.setState({\n            uploaded_img: \"no-img\"\n        })\n    }\n    render_img_video_create(url) {\n        if (url !== undefined) {\n            if (url === \"no-img\") {\n\n            }\n            else if (url.slice(-3) === \"mp4\") {\n                return (<>\n                    <p className=\"text-center pr-3 pl-3 pb-11 pt-1\">\n                        <span className=\"CloseBtn close closeImg\" onClick={this.handleX.bind(this)}>×</span>\n                        <video className=\"Video\" controls>\n                            <source src={url} type=\"video/mp4\" />\n                    Your browser does not support HTML video.\n                    </video>\n                    </p>\n                </>)\n            }\n            else {\n                return (<>\n                    <p className=\"text-center pr-3 pl-3 pb-1 pt-1\">\n                        <span className=\"CloseBtn close closeImg\" onClick={this.handleX.bind(this)}>×</span>\n                        < img className=\"Image HoverShadow\" src={url} alt=\"\" />\n                    </p>\n                </>)\n            }\n        }\n    }\n    handleXedit() {\n        this.setState({\n            selected_img: \"no-img\"\n        })\n    }\n    render_img_video_edit(url) {\n        if (url !== undefined) {\n            if (url === \"no-img\") {\n\n            }\n            else if (url.slice(-3) === \"mp4\") {\n                return (<>\n                    <p className=\"text-center pr-3 pl-3 pb-11 pt-1\">\n                        <span className=\"CloseBtn close closeImg\" onClick={this.handleXedit.bind(this)}>×</span>\n                        <video className=\"Video\" controls>\n                            <source src={url} type=\"video/mp4\" />\n                    Your browser does not support HTML video.\n                    </video>\n                    </p>\n                </>)\n            }\n            else {\n                return (<>\n                    <p className=\"text-center pr-3 pl-3 pb-1 pt-1\">\n                        <span className=\"CloseBtn close closeImg\" onClick={this.handleXedit.bind(this)}>×</span>\n                        < img className=\"Image HoverShadow\" src={url} alt=\"\" />\n                    </p>\n                </>)\n            }\n        }\n    }\n    editable(post) {\n        if (this.props.user.email === post.user.email) {\n            return <div className=\"ml-auto\"> <span id={post.post_id} onClick={this.handleClick.bind(this)}> <small className=\"hover\" id={post.post_id}>Edit</small></span> <span><small>|</small></span> <span id={post.post_id} onClick={this.handleDelete.bind(this).bind(this)}> <small className=\"hover\" id={post.post_id}>Delete</small></span> </div>\n        }\n    }\n    showPost() {\n        return (<>\n            {this.state.post_list.map((post, index) => {\n                if (post.family_key === this.props.user.key) {\n                    return <div key={index} className=\"mb-2\">\n                        <div className=\"post w-100 m-0 p-4 border rounded bg-white\">\n                            <div className=\"title pt-2 pb-2 border-bottom\">\n                                <div className=\"row w-100 ml-2 mr-2\">\n                                    <div className=\"Avatar col-auto p-0\"><img className=\"rounded-circle border\" src={this.getAvatar(post.user.email)} alt=\"Generic placeholder\" width=\"50px\" height=\"50px\" /></div>\n                                    <div className=\"col pr-0\">\n                                        <div className=\"d-flex\"><p className=\"m-0\">{this.getName(post.user.email)}</p> {this.editable(post)}</div>\n                                        <p className=\"m-0\"><small>\n                                            {this.handleEdit_Time(post)}\n                                        </small>\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <textarea className=\"PostContent noInput pl-3 pr-3\" readOnly\n                                rows={this.handlestring_length(post, \"row\")}\n                                cols={this.handlestring_length(post, \"col\")}\n                                value={post.content}\n                                >\n\n                            </textarea>\n                            {this.render_img_video(post.img)}\n                            <hr />\n                            <Comment getpost={this.getPostbyid.bind(this)}\n                                post_id={post.post_id}\n                                poster={this.props.user}\n                                users={this.props.users} \n                                length_per_row = {Math.floor(($(\"#createPost\").width()-96)/8.4)}/>\n\n                        </div>\n\n                    </div>\n                }\n                return null\n            })}\n        </>)\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"Post mt-4 mr-2 mb-2 ml-2 border rounded bg-white p-4\">\n                    <textarea id=\"createPost\" type=\"text\" className=\"form-control mb-2\" placeholder=\"Share your story.\" name=\"content\" value={this.state.content} onChange={this.handleChange.bind(this)} />\n                    {this.render_img_video_create(this.state.uploaded_img)}\n                    <div className=\"d-flex\">\n                        <span className=\"ml-auto\">\n                            <div className=\"upload-btn-wrapper\">\n                                <button className=\"btn btn-success\">Upload Image/Video</button>\n                                <input type=\"file\"\n                                    className=\"file\"\n                                    id=\"img\"\n                                    name=\"img\"\n                                    value={this.state.img}\n                                    onChange={this.handleUploadImg.bind(this)}\n                                />\n                            </div>\n                        </span>\n                        <span className=\"ml-2\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleCreate.bind(this)}>Post</button>\n                        </span>\n                    </div>\n                </div>\n                <div className=\"Post m-2 m-0\">\n                    {this.showPost()}\n                </div>\n                <div className=\"modal fade\" id=\"editPost\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"Modal modal-body\">\n                                <input type=\"text\" className=\"form-control mb-2\" name=\"selected_content\" value={this.state.selected_content || \"\"} onChange={this.handleChange.bind(this)} />\n                                {this.render_img_video_edit(this.state.selected_img)}\n                                <div className=\"d-flex\">\n                                    <span className=\"ml-auto\">\n                                        <div className=\"upload-btn-wrapper\">\n                                            <button className=\"btn btn-success\">Upload Image/Video</button>\n                                            <input type=\"file\"\n                                                className=\"file\"\n                                                id=\"imgedit\"\n                                                // name=\"img\"\n                                                // value={this.state.selected_img}\n                                                onChange={this.handleUploadImgEdit.bind(this)}\n                                            />\n                                        </div>\n                                    </span>\n                                    <span className=\"ml-2\">\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleEdit.bind(this)}>Submit</button>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}