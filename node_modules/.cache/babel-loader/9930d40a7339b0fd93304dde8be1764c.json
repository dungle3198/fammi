{"ast":null,"code":"var _jsxFileName = \"/Users/dungle/Desktop/fammi/src/components/Checklist.jsx\";\nimport React, { Component } from 'react';\nimport { docClient } from './Data/todolist';\nexport default class Checklist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: this.props.all_list[this.props.index],\n      refresh: false\n    };\n  }\n\n  handleChangeArray(e) {\n    var new_list = this.state.list.elements;\n    this.state.list.elements.forEach(element => {\n      if (element.name === e.target.name) {\n        console.log(element);\n        element.status = e.target.checked;\n        return;\n      }\n    });\n    var new_mem = this.state.list;\n    new_mem.elements = new_list;\n    var params = {\n      TableName: \"todolist\",\n      Key: {\n        \"todolist_id\": this.state.list.todolist_id\n      },\n      UpdateExpression: \"set elements = :elements\",\n      ExpressionAttributeValues: {\n        \":elements\": new_list\n      },\n      ReturnValues: \"UPDATED_NEW\"\n    };\n    docClient.update(params, function (err, data) {\n      if (err) {//console.log(\"users::save::error - Elements\" + JSON.stringify(err, null, 2));\n      } else {\n        this.setState({\n          list: new_mem\n        });\n      }\n    }.bind(this)); // for (var i = 0; i < this.state.list.length; i++) {\n    //     if (i === parseInt(e.target.name)) {\n    //         let element = {}\n    //         element[\"name\"] = e.target.value\n    //         element[\"status\"] = this.state.list[i].status\n    //         new_elements.push(element)\n    //     }\n    //     else {\n    //         new_elements.push(this.state.list[i])\n    //     }\n    // }\n  }\n\n  handleChangeArrayName(e) {\n    var new_list = this.state.list.elements;\n    this.state.list.elements.forEach(element => {\n      if (element.name === e.target.name) {\n        console.log(element);\n        element.name = e.target.value;\n        return;\n      }\n    });\n    var new_mem = this.state.list;\n    new_mem.elements = new_list;\n    this.setState({\n      list: new_mem\n    });\n  }\n\n  handleChangeArrayTitle(e) {\n    var new_title = this.state.list.title;\n    var new_mem = this.state.list;\n\n    if (e.target.name === new_title) {\n      new_title = e.target.value;\n    }\n\n    new_mem.title = new_title;\n    this.setState({\n      list: new_mem\n    });\n  }\n\n  selectList() {\n    this.props.selectChecklist(this.state.list);\n    console.log(this.props.all_list);\n  }\n\n  handleChange(e) {\n    let obj = {};\n    obj[e.target.name] = e.target.value;\n    this.setState(obj);\n  }\n\n  deleteList() {\n    var confirm_box = window.confirm(\"Do you want to delete the todolist.\");\n\n    if (confirm_box === true) {\n      var params = {\n        TableName: \"todolist\",\n        Key: {\n          \"todolist_id\": this.props.checklist.todolist_id\n        }\n      };\n      docClient.delete(params, function (err, data) {\n        if (err) {\n          console.error(\"Unable to delete item. Error JSON:\", JSON.stringify(err, null, 2));\n        } else {\n          this.props.getList();\n          console.log(\"DeleteItem succeeded:\", JSON.stringify(data, null, 2));\n        }\n      }.bind(this));\n    }\n  }\n\n  handleAvatar(ava) {\n    if (ava !== \"\") {\n      return ava;\n    }\n\n    return require('./imgs/ava.jpg');\n  }\n\n  componentDidUpdate() {\n    if (this.state.list !== this.props.all_list[this.props.index]) {\n      this.setState({\n        list: this.props.all_list[this.props.index]\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"checklist bg-white m-2 border rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title m-2 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: this.state.list.user.avatar,\n      className: \"border rounded-circle\",\n      src: this.handleAvatar(this.state.list.user.avatar),\n      width: \"40px\",\n      height: \"40px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"pl-2 title lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.list.title), React.createElement(\"div\", {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.selectList.bind(this),\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#editList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      className: \"hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Edit\"), \" \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"|\")), React.createElement(\"span\", {\n      onClick: this.deleteList.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \" \", React.createElement(\"small\", {\n      className: \"hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Delete\"), \" \"))), React.createElement(\"div\", {\n      className: \"ml-3 creator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.list.list_status, \" by \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.list.user.username), \" at \", new Date(this.state.list.time).toString().substr(4, 11)))), React.createElement(\"ul\", {\n      className: \"list-group ml-4 mr-4 mb-4 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.list.elements.map((element, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: index,\n        name: element.name.toString(),\n        type: \"checkbox\",\n        checked: element.status,\n        onChange: this.handleChangeArray.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), \" \", element.name);\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/dungle/Desktop/fammi/src/components/Checklist.jsx"],"names":["React","Component","docClient","Checklist","constructor","props","state","list","all_list","index","refresh","handleChangeArray","e","new_list","elements","forEach","element","name","target","console","log","status","checked","new_mem","params","TableName","Key","todolist_id","UpdateExpression","ExpressionAttributeValues","ReturnValues","update","err","data","setState","bind","handleChangeArrayName","value","handleChangeArrayTitle","new_title","title","selectList","selectChecklist","handleChange","obj","deleteList","confirm_box","window","confirm","checklist","delete","error","JSON","stringify","getList","handleAvatar","ava","require","componentDidUpdate","render","user","avatar","list_status","username","Date","time","toString","substr","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { docClient } from './Data/todolist'\nexport default class Checklist extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            list: this.props.all_list[this.props.index],\n            refresh: false\n        }\n    }\n    handleChangeArray(e) {\n        var new_list = this.state.list.elements;\n        this.state.list.elements.forEach(element => {\n            if (element.name === e.target.name) {\n                console.log(element);\n                element.status = e.target.checked;\n\n                return;\n            }\n        });\n        var new_mem = this.state.list;\n        new_mem.elements = new_list;\n\n\n        var params = {\n            TableName: \"todolist\",\n            Key: {\n                \"todolist_id\": this.state.list.todolist_id,\n\n            },\n            UpdateExpression: \"set elements = :elements\",\n            ExpressionAttributeValues: {\n                \":elements\": new_list,\n            },\n            ReturnValues: \"UPDATED_NEW\"\n        };\n        docClient.update(params, function (err, data) {\n\n            if (err) {\n                //console.log(\"users::save::error - Elements\" + JSON.stringify(err, null, 2));\n            } else {\n                this.setState({ list: new_mem });\n            }\n        }.bind(this));\n\n        // for (var i = 0; i < this.state.list.length; i++) {\n        //     if (i === parseInt(e.target.name)) {\n        //         let element = {}\n        //         element[\"name\"] = e.target.value\n        //         element[\"status\"] = this.state.list[i].status\n        //         new_elements.push(element)\n        //     }\n        //     else {\n        //         new_elements.push(this.state.list[i])\n        //     }\n        // }\n\n\n    }\n    handleChangeArrayName(e) {\n        var new_list = this.state.list.elements;\n        this.state.list.elements.forEach(element => {\n            if (element.name === e.target.name) {\n                console.log(element);\n                element.name = e.target.value;\n                return;\n            }\n        });\n        var new_mem = this.state.list;\n        new_mem.elements = new_list;\n        this.setState({ list: new_mem })\n    }\n    handleChangeArrayTitle(e) {\n        var new_title = this.state.list.title;\n        var new_mem = this.state.list;\n        if (e.target.name === new_title) {\n            new_title = e.target.value;\n        }\n        new_mem.title = new_title;\n        this.setState({ list: new_mem })\n    }\n    selectList() {\n        this.props.selectChecklist(this.state.list);\n        console.log(this.props.all_list);\n    }\n    handleChange(e) {\n        let obj = {};\n        obj[e.target.name] = e.target.value;\n\n        this.setState(obj);\n    }\n    deleteList() {\n        var confirm_box = window.confirm(\"Do you want to delete the todolist.\");\n        if (confirm_box === true) {\n            var params = {\n                TableName: \"todolist\",\n                Key: {\n                    \"todolist_id\": this.props.checklist.todolist_id,\n                }\n            };\n            docClient.delete(params, function (err, data) {\n                if (err) {\n                    console.error(\"Unable to delete item. Error JSON:\", JSON.stringify(err, null, 2));\n                } else {\n                    this.props.getList();\n                    console.log(\"DeleteItem succeeded:\", JSON.stringify(data, null, 2));\n                }\n            }.bind(this));\n        }\n    }\n    handleAvatar(ava) {\n        if (ava !== \"\") {\n            return (ava);\n        }\n        return require('./imgs/ava.jpg');\n    }\n    componentDidUpdate() {\n        if (this.state.list !== this.props.all_list[this.props.index]) {\n            this.setState({ list: this.props.all_list[this.props.index] })\n        }\n    }\n    render() {\n\n        return (\n            <div className=\"checklist bg-white m-2 border rounded\">\n                <div className=\"title m-2 mt-3\">\n                    <div className=\"col d-flex\">\n                        <img alt={this.state.list.user.avatar}\n                            className=\"border rounded-circle\"\n                            src={this.handleAvatar(this.state.list.user.avatar)}\n                            width=\"40px\" height=\"40px\" />\n                        <div className=\"pl-2 title lead\">{this.state.list.title}</div>\n                        <div className=\"ml-auto\">\n                            <span onClick={this.selectList.bind(this)} data-toggle=\"modal\" data-target=\"#editList\"> <small className=\"hover\" >Edit</small> </span>\n                            <span><small>|</small></span>\n                            <span onClick={this.deleteList.bind(this)}> <small className=\"hover\" >Delete</small> </span>\n                        </div>\n                    </div>\n                    <div className=\"ml-3 creator\">\n                        <small>{this.state.list.list_status} by <strong>{this.state.list.user.username}</strong> at {new Date(this.state.list.time).toString().substr(4, 11)}</small>\n                    </div>\n                    {/* <div className=\"buttoncontainer\">\n                            <div className=\"editbutton\" data-toggle=\"modal\" data-target=\"#editBox\" onClick={this.selectList.bind(this)} >edit</div>\n                            <div className=\"deletebutton\" data-toggle=\"modal\" data-target=\"#editBox\" onClick={this.deleteList.bind(this)} >delete</div>\n                        </div> */}\n\n\n\n                </div>\n\n                <ul className=\"list-group ml-4 mr-4 mb-4 mt-2\">\n                    {this.state.list.elements.map((element, index) => {\n                        return <li key={index} className=\"list-group-item\">\n                            <label>\n                                <input id={index}\n                                    name={element.name.toString()}\n                                    type=\"checkbox\"\n                                    checked={element.status}\n                                    onChange={this.handleChangeArray.bind(this)} />\n                            </label> {element.name}\n                        </li>\n                    })}\n                </ul>\n\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}