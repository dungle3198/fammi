{"ast":null,"code":"var _jsxFileName = \"/Users/dungle/Desktop/fammi/src/components/GroupMsg.jsx\";\nimport React from \"react\";\nimport chat from \"./Messenger\";\n\nvar request = require('request');\n\nclass Groupchat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.authenticateFunction = () => {\n      if (!this.state.isAuthenticated) {\n        if (this.props.isAuthenticated) {\n          chat.Login(this.props.user.comet_uid);\n          this.getUser();\n          this.getGroupMessage();\n          this.setState({\n            isAuthenticated: this.props.isAuthenticated\n          });\n          return;\n        }\n      }\n\n      return;\n    };\n\n    this.sendMessage = () => {\n      chat.sendGroupMessage(this.GUID, this.state.messageText).then(message => {\n        console.log(\"Message sent successfully:\", message);\n        this.setState({\n          messageText: null\n        });\n      }, error => {\n        if (error.code === \"ERR_NOT_A_MEMBER\") {\n          chat.joinGroup(this.GUID).then(response => {\n            this.sendMessage();\n          });\n        }\n      });\n    };\n\n    this.scrollToBottom = () => {\n      const chat = document.getElementById(\"chatList\");\n      chat.scrollTop = chat.scrollHeight;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.sendMessage();\n      event.target.reset();\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        messageText: event.target.value\n      });\n    };\n\n    this.getUser = () => {\n      chat.getLoggedinUser().then(user => {\n        console.log(\"user details:\", {\n          user\n        });\n        this.setState({\n          user: user\n        });\n      }).catch(error => {\n        if (error.code === \"USER_NOT_LOGED_IN\") {\n          this.setState({\n            isAuthenticated: false\n          });\n        }\n      });\n    };\n\n    this.messageListener = () => {\n      chat.addMessageListener((data, error) => {\n        if (error) return console.log(`error: ${error}`); //console.log(data)\n\n        this.getGroupMessage();\n        this.scrollToBottom(); //this.getGroupMessage()\n      });\n    };\n\n    this.state = {\n      users: [],\n      receiverID: \"\",\n      messageText: \"\",\n      groupMessage: [],\n      othergroup: [],\n      user: {},\n      isAuthenticated: false\n    };\n    this.GUID = this.props.user.key;\n    this.authenticateFunction();\n  }\n\n  sendMessageButton() {\n    var options = {\n      method: 'POST',\n      url: 'https://api-us.cometchat.io/v2.0/users/' + this.props.user.comet_uid + '/messages',\n      headers: {\n        appid: '179356b6e66895b',\n        apikey: 'fae743651e432f171ee21ba834d8af048bd9e841',\n        'content-type': 'application/json',\n        accept: 'application/json'\n      },\n      body: '{\"receiver\":\"' + this.props.user.key + '\",\"receiverType\":\"group\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":\"' + this.state.messageText + '\",\"metadata\":{\"key1\":\"value1\",\"key2\":\"value2\"}}}'\n    };\n    request(options, function (error, response, body) {\n      if (error) throw new Error(error);\n      this.getGroupMessage();\n    }.bind(this));\n  }\n\n  getGroupMessage() {\n    var options = {\n      method: 'GET',\n      url: 'https://api-us.cometchat.io/v2.0/users/' + this.props.user.comet_uid + '/groups/' + this.props.user.key + '/messages',\n      headers: {\n        appid: '179356b6e66895b',\n        apikey: 'fae743651e432f171ee21ba834d8af048bd9e841',\n        'content-type': 'application/json',\n        accept: 'application/json'\n      }\n    };\n    request(options, function (error, response, body) {\n      if (error) throw new Error(error);\n      var u = body;\n      JSON.stringify(u);\n      var array = JSON.parse(u).data;\n\n      if (array !== undefined) {\n        this.setState({\n          groupMessage: array,\n          messageText: \"\"\n        }, () => {\n          this.scrollToBottom();\n        });\n      }\n    }.bind(this));\n  }\n\n  testComponent() {\n    this.state.groupMessage.forEach(element => {\n      if (element.data.entities.sender !== undefined) {\n        console.log(element.data.entities.sender.entity);\n      }\n    });\n  }\n\n  handleAvatar(ava) {\n    if (ava !== \"\") {\n      return ava;\n    }\n\n    return require('./imgs/ava.jpg');\n  }\n\n  handleUsername(comet_uid) {\n    var user = this.props.users.find(value => {\n      return value.comet_uid === comet_uid;\n    });\n\n    if (user !== undefined) {\n      return user.username;\n    }\n\n    return comet_uid;\n  }\n\n  componentDidMount() {\n    //this.getGroupMessage()\n    if (this.state.isAuthenticated) {\n      this.getUser();\n    }\n\n    this.messageListener(); //chat.joinGroup(this.props.user.key)\n  }\n\n  componentDidUpdate() {\n    this.authenticateFunction();\n  }\n\n  render() {\n    if (!this.state.isAuthenticated) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.groupMessage !== undefined) {\n      return React.createElement(\"div\", {\n        className: \"chatWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Chat Box\"), React.createElement(\"ul\", {\n        className: \"chat border rounded\",\n        id: \"chatList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.state.groupMessage.map(element => {\n        if (element.data.entities.sender !== undefined) {\n          return React.createElement(\"div\", {\n            key: element.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, this.props.user.comet_uid === element.sender ? React.createElement(\"li\", {\n            className: \"row p-0 m-0 pl-2 pr-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col p-0 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-right m-0 text-secondary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, React.createElement(\"small\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, this.props.user.username)), React.createElement(\"div\", {\n            className: \"ml-auto message border rounded p-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, \" \", element.data.text)), React.createElement(\"div\", {\n            className: \"col-auto p-0 pl-1 d-flex align-items-end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"avatar rounded-circle border\",\n            src: this.handleAvatar(this.props.user.avatar),\n            alt: this.props.username,\n            width: \"30px\",\n            height: \"30px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }))) : React.createElement(\"li\", {\n            className: \"row p-0 m-0 pl-2 pr-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-auto p-0 pr-1 d-flex align-items-end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"avatar rounded-circle border\",\n            src: this.handleAvatar(element.data.entities.sender.entity.avatar),\n            alt: this.props.username,\n            width: \"30px\",\n            height: \"30px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"col p-0 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-left m-0 text-secondary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, React.createElement(\"small\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, this.handleUsername(element.sender))), React.createElement(\"div\", {\n            className: \"mr-auto message border rounded p-1 pl-2 pr-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, \" \", element.data.text))));\n        }\n\n        return null;\n      })), React.createElement(\"div\", {\n        className: \"chatInputWrapper row w-100 m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"col-10 p-0\",\n        onSubmit: this.sendMessageButton.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"textarea input h-100 bg-white border rounded\",\n        type: \"text\",\n        placeholder: \"Enter your message...\",\n        value: this.state.messageText,\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-auto p-0 ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn btn-primary\",\n        onClick: this.sendMessageButton.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Send\"))));\n    }\n\n    return;\n  }\n\n}\n\nexport default Groupchat;","map":{"version":3,"sources":["/Users/dungle/Desktop/fammi/src/components/GroupMsg.jsx"],"names":["React","chat","request","require","Groupchat","Component","constructor","props","authenticateFunction","state","isAuthenticated","Login","user","comet_uid","getUser","getGroupMessage","setState","sendMessage","sendGroupMessage","GUID","messageText","then","message","console","log","error","code","joinGroup","response","scrollToBottom","document","getElementById","scrollTop","scrollHeight","handleSubmit","event","preventDefault","target","reset","handleChange","value","getLoggedinUser","catch","messageListener","addMessageListener","data","users","receiverID","groupMessage","othergroup","key","sendMessageButton","options","method","url","headers","appid","apikey","accept","body","Error","bind","u","JSON","stringify","array","parse","undefined","testComponent","forEach","element","entities","sender","entity","handleAvatar","ava","handleUsername","find","username","componentDidMount","componentDidUpdate","render","map","id","text","avatar"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport chat from \"./Messenger\";\n\n\nvar request = require('request')\nclass Groupchat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            receiverID: \"\",\n            messageText: \"\",\n            groupMessage: [],\n            othergroup: [],\n            user: {},\n            isAuthenticated: false\n        };\n        this.GUID = this.props.user.key;\n        this.authenticateFunction();\n    }\n\n    authenticateFunction = () => {\n        if (!this.state.isAuthenticated) {\n            if (this.props.isAuthenticated) {\n                chat.Login(this.props.user.comet_uid);\n                this.getUser()\n                this.getGroupMessage()\n                this.setState({ isAuthenticated: this.props.isAuthenticated })\n                return\n            }\n        }\n        return\n    }\n    sendMessage = () => {\n        chat.sendGroupMessage(this.GUID, this.state.messageText).then(\n            message => {\n                console.log(\"Message sent successfully:\", message);\n                this.setState({ messageText: null });\n            },\n            error => {\n                if (error.code === \"ERR_NOT_A_MEMBER\") {\n                    chat.joinGroup(this.GUID).then(response => {\n                        this.sendMessage();\n                    });\n                }\n            }\n        );\n    };\n    scrollToBottom = () => {\n        const chat = document.getElementById(\"chatList\");\n        chat.scrollTop = chat.scrollHeight;\n    };\n    handleSubmit = event => {\n        event.preventDefault();\n        this.sendMessage();\n        event.target.reset();\n    };\n    handleChange = event => {\n        this.setState({ messageText: event.target.value });\n    };\n\n    getUser = () => {\n        chat\n            .getLoggedinUser()\n            .then(user => {\n                console.log(\"user details:\", { user });\n                this.setState({ user: user });\n            })\n            .catch((error) => {\n                if (error.code === \"USER_NOT_LOGED_IN\") {\n                    this.setState({\n                        isAuthenticated: false\n                    });\n                }\n            });\n    };\n    messageListener = () => {\n        chat.addMessageListener((data, error) => {\n            if (error) return console.log(`error: ${error}`);\n            //console.log(data)\n\n            this.getGroupMessage();\n            this.scrollToBottom();\n            //this.getGroupMessage()\n        });\n    };\n    sendMessageButton() {\n        var options = {\n            method: 'POST',\n            url: 'https://api-us.cometchat.io/v2.0/users/' + this.props.user.comet_uid + '/messages',\n            headers: {\n                appid: '179356b6e66895b',\n                apikey: 'fae743651e432f171ee21ba834d8af048bd9e841',\n                'content-type': 'application/json',\n                accept: 'application/json'\n            },\n            body: '{\"receiver\":\"' + this.props.user.key + '\",\"receiverType\":\"group\",\"category\":\"message\",\"type\":\"text\",\"data\":{\"text\":\"' + this.state.messageText + '\",\"metadata\":{\"key1\":\"value1\",\"key2\":\"value2\"}}}'\n\n        };\n\n        request(options, function (error, response, body) {\n            if (error) throw new Error(error);\n            this.getGroupMessage()\n        }.bind(this))\n    }\n    getGroupMessage() {\n        var options = {\n            method: 'GET',\n            url: 'https://api-us.cometchat.io/v2.0/users/' + this.props.user.comet_uid + '/groups/' + this.props.user.key + '/messages',\n            headers: {\n                appid: '179356b6e66895b',\n                apikey: 'fae743651e432f171ee21ba834d8af048bd9e841',\n                'content-type': 'application/json',\n                accept: 'application/json'\n            }\n        };\n\n        request(options, function (error, response, body) {\n            if (error) throw new Error(error);\n            var u = body;\n            JSON.stringify(u);\n            var array = JSON.parse(u).data\n            if (array !== undefined) {\n                this.setState(({\n                    groupMessage: array,\n                    messageText: \"\"\n                }),\n                    () => {\n                        this.scrollToBottom();\n                    }\n                );\n            }\n        }.bind(this));\n\n    }\n    testComponent() {\n        this.state.groupMessage.forEach(element => {\n            if (element.data.entities.sender !== undefined) {\n                console.log(element.data.entities.sender.entity);\n            }\n        }\n        )\n    }\n    handleAvatar(ava) {\n        if (ava !== \"\") {\n            return (ava);\n        }\n        return require('./imgs/ava.jpg');\n    }\n    handleUsername(comet_uid) {\n\n        var user = (this.props.users.find((value) => {\n            return value.comet_uid === comet_uid;\n        }))\n        if (user !== undefined) {\n            return user.username;\n        }\n        return comet_uid\n    }\n    componentDidMount() {\n        //this.getGroupMessage()\n        if (this.state.isAuthenticated) {\n            this.getUser();\n        }\n\n        this.messageListener();\n        //chat.joinGroup(this.props.user.key)\n    }\n    componentDidUpdate() {\n        this.authenticateFunction();\n\n\n    }\n    render() {\n        if (!this.state.isAuthenticated) {\n            return <div></div>;\n        }\n        if (this.state.groupMessage !== undefined) {\n            return (\n                <div className=\"chatWindow\">\n                    <h5>Chat Box</h5>\n                    <ul className=\"chat border rounded\" id=\"chatList\">\n                        {/* <button onClick={this.testComponent.bind(this)}>Test</button> */}\n                        {this.state.groupMessage.map(element => {\n                            if (element.data.entities.sender !== undefined) {\n                                return (\n                                    <div key={element.id}>\n                                        {this.props.user.comet_uid === element.sender ? (\n                                            <li className=\"row p-0 m-0 pl-2 pr-2\">\n                                                <div className=\"col p-0 \">\n\n                                                    <p className=\"text-right m-0 text-secondary\"><small>{this.props.user.username}</small></p>\n                                                    <div className=\"ml-auto message border rounded p-1\"> {element.data.text}</div>\n                                                </div>\n                                                <div className=\"col-auto p-0 pl-1 d-flex align-items-end\">\n                                                    <img className=\"avatar rounded-circle border\"\n                                                        src={this.handleAvatar(this.props.user.avatar)}\n                                                        alt={this.props.username} width=\"30px\" height=\"30px\" />\n                                                </div>\n                                            </li>\n                                        ) : (\n                                                <li className=\"row p-0 m-0 pl-2 pr-2\">\n                                                    <div className=\"col-auto p-0 pr-1 d-flex align-items-end\">\n                                                        <img className=\"avatar rounded-circle border\" src={this.handleAvatar(element.data.entities.sender.entity.avatar)}\n                                                            alt={this.props.username} width=\"30px\" height=\"30px\" />\n                                                    </div>\n                                                    <div className=\"col p-0 \">\n                                                        <p className=\"text-left m-0 text-secondary\"><small>{this.handleUsername(element.sender)}</small></p>\n                                                        <div className=\"mr-auto message border rounded p-1 pl-2 pr-2\"> {element.data.text}</div>\n                                                    </div>\n                                                    \n                                                    {/* <div className=\"msg\">\n                                                        <div className=\"avatar\">\n                                                            <img src={this.handleAvatar(element.data.entities.sender.entity.avatar)}\n                                                                alt={this.props.username} />\n                                                            <p>{this.handleUsername(element.sender)}</p>\n                                                        </div>\n                                                        <div className=\"message\"> {element.data.text} </div>\n                                                    </div> */}\n                                                </li>\n                                            )}\n                                    </div>\n                                )\n                            }\n                            return null\n                        })}\n                    </ul>\n                    <div className=\"chatInputWrapper row w-100 m-0\">\n                        <form className=\"col-10 p-0\" onSubmit={this.sendMessageButton.bind(this)}>\n                            <input\n                                className=\"textarea input h-100 bg-white border rounded\"\n                                type=\"text\"\n                                placeholder=\"Enter your message...\"\n                                value={this.state.messageText}\n                                onChange={this.handleChange.bind(this)}\n                            />\n                        </form>\n                        <div className=\"col-auto p-0 ml-auto\"><div className=\"btn btn-primary\" onClick={this.sendMessageButton.bind(this)}>Send</div></div>\n\n                    </div>\n                </div>\n            );\n        }\n        return;\n\n    }\n}\nexport default Groupchat;"]},"metadata":{},"sourceType":"module"}